{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PeronLink.tsx","components/PeopleTable/PeopleTable.tsx","components/utils.tsx","components/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","components/NotFouundPage/NotFoundPage.tsx","components/NavBarItem/NavBarItem.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","cn","sex","name","PeopleTable","people","map","born","died","mother","motherName","father","fatherName","getPeopleWithParents","data","getParent","parent","find","pers","PeoplePage","useState","setPeople","useParams","isError","setIsError","isLoading","setIsLoading","fetchPeople","useEffect","isSomethingWrong","length","areNoPeopleOnServer","HomePage","NotFoundPage","NavBarItem","path","title","isActive","NavBar","App","role","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.acb1cd39.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <NavLink\n    to={`../${person.slug}`}\n    className={() => (cn({\n      'has-text-danger': person.sex === 'f',\n    }))}\n  >\n    {person.name}\n  </NavLink>\n);\n","import cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  people: Person[],\n  slug: string,\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, slug }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => (\n        <tr\n          data-cy=\"person\"\n          key={person.slug}\n          className={cn({\n            'has-background-warning': person.slug === slug,\n          })}\n        >\n          <td>\n            <PersonLink person={person} />\n          </td>\n\n          <td>{person.sex}</td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n          <td>\n            {person.mother\n              ? (\n                <PersonLink person={person.mother} />\n              ) : (\n                person.motherName || '-'\n              )}\n          </td>\n          <td>\n            {person.father\n              ? (\n                <PersonLink person={person.father} />\n              ) : (\n                person.fatherName || '-'\n              )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Person } from '../types';\n\nexport const getPeopleWithParents = (data: Person[]) => {\n  const getParent = (parent: string | null) => {\n    return data.find(pers => pers.name === parent);\n  };\n\n  return data.map(person => ({\n    ...person,\n    mother: getParent(person.motherName),\n    father: getParent(person.fatherName),\n  }));\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { getPeopleWithParents } from '../utils';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const { slug = '' } = useParams();\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchPeople = async () => {\n    setIsLoading(true);\n    try {\n      const data = await getPeople();\n\n      setPeople(getPeopleWithParents(data));\n    } catch {\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  const isSomethingWrong = !people.length && isError;\n  const areNoPeopleOnServer = !people.length && !isError && !isLoading;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {(isLoading\n            && (<Loader />))}\n\n          {isSomethingWrong && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {areNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length !== 0 && (\n            <PeopleTable people={people} slug={slug} />\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import cn from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  path: string,\n  title: string,\n}\n\nexport const NavBarItem: React.FC<Props> = ({ path, title }) => (\n  <NavLink\n    className={({ isActive }) => cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={path}\n  >\n    {title}\n  </NavLink>\n);\n","import React from 'react';\nimport { NavBarItem } from '../NavBarItem';\n\nexport const NavBar: React.FC = () => (\n  <div className=\"navbar-brand\">\n    <NavBarItem path=\"/\" title=\"Home\" />\n\n    <NavBarItem path=\"/people\" title=\"People\" />\n  </div>\n);\n","import {\n  Routes, Route, Navigate,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFouundPage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n\n        <NavBar />\n\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\" element={<PeoplePage />} />\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}